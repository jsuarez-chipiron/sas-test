/**
 * @author Niklas Lundkvist, IRR_MOD_TedsBooking
 * @date 2020-03-16
 * @description Test Class for TedsBooking model class.
 *      Automatically generated by JSON2Apex - http://JSON2Apex.herokuapp.com/
 */

@IsTest
private class IRR_MOD_TedsBooking_Test {

    // This test method should give 100% coverage
    @IsTest
    static void testParse() {
        String json = '{\"id\":\"ABC132-20200205\",\"reference\":\"ABC132\",\"type\":\"ReturnTrip\",\"status\":\"Active\",\"codsId\":\"85465242\",\"audit\":{\"created\":{\"officeId\":\"STOSK08RV\",\"at\":\"2020-02-05T17:32:28Z\"},\"updated\":{\"officeId\":\"STOSK08RV\",\"at\":\"2017-02-12T17:32:28Z\"}},\"passengers\":[{\"id\":\"ABC132-01\",\"title\":\"MRS\",\"firstName\":\"Testar\",\"lastName\":\"Testperson\",\"type\":\"Adult\",\"contact\":{\"phone\":[{\"type\":\"CTCM\",\"number\":\"+46700000000\"}],\"email\":[{\"type\":\"CTCE\",\"address\":\"name@email.com\"}]},\"frequentTraveler\":{\"euroBonus\":[{\"segmentIds\":[\"ST1\"],\"number\":\"544127491\",\"tier\":\"EBB\"}],\"other\":[{\"segmentIds\":[\"ST1\"],\"number\":\"S125891143\",\"carrier\":\"LH\"}]},\"specialServiceRequests\":[{\"segmentIds\":[\"ST1\",\"ST2\"],\"type\":\"Wheelchair\",\"code\":\"WCHR\",\"text\":\"WCHR ASSISTANCE.PROVIDED REGULATIONS IN SALES PROCEDURES ARE MET\"}],\"segments\":[{\"segmentId\":\"ABC132-O-01-01\",\"seatedWith\":null,\"ticket\":{\"number\":\"117-3456789009876\",\"type\":\"ETKT\"},\"seat\":\"3C\",\"isCheckedIn\":true,\"checkinOfficeId\":\"OSLSK08VB\",\"isBoarded\":true},{\"segmentId\":\"ABC132-I-01-01\",\"seatedWith\":null,\"ticket\":{\"number\":\"117-3456789009876\",\"type\":\"ETKT\"},\"seat\":\"3C\",\"isCheckedIn\":true,\"checkinOfficeId\":\"OSLSK08VB\",\"isBoarded\":true},{\"segmentId\":\"ABC132-O-02-01\",\"seatedWith\":null,\"ticket\":{\"number\":\"117-3456789009876\",\"type\":\"ETKT\"},\"seat\":\"3C\",\"isCheckedIn\":true,\"checkinOfficeId\":\"OSLSK08VB\",\"isBoarded\":true},{\"segmentId\":\"ABC132-O-02-01\",\"seatedWith\":null,\"ticket\":{\"number\":\"117-3456789009876\",\"type\":\"ETKT\"},\"seat\":\"3C\",\"isCheckedIn\":true,\"checkinOfficeId\":\"OSLSK08VB\",\"isBoarded\":true}]}],\"trips\":[{\"id\":\"ABC132-O-01\",\"type\":\"Outbound\",\"segments\":[{\"id\":\"ABC132-O-01-01\",\"transportationType\":\"Flight\",\"statusCode\":\"HK\",\"status\":\"Confirmed\",\"flight\":{\"id\":\"SK1238-20200213-ARN-CPH\",\"operatingCarrier\":\"SK\",\"operatingFlightNumber\":\"1238\",\"marketingCarrier\":\"SK\",\"marketingFlightNumber\":\"1238\",\"departure\":{\"station\":\"ARN\",\"terminal\":\"2\",\"scheduledTime\":{\"local\":\"2020-02-13T16:00:00Z\",\"utc\":\"2020-02-13T15:00:00Z\"}},\"arrival\":{\"station\":\"CPH\",\"terminal\":\"2\",\"scheduledTime\":{\"local\":\"2020-02-13T15:00:00Z\",\"utc\":\"2020-02-13T16:00:00Z\"}}},\"bookingClass\":\"Y\",\"serviceClass\":\"C\"}]},{\"id\":\"ABC132-I-01\",\"type\":\"Inbound\",\"segments\":[{\"id\":\"ABC132-I-01-01\",\"transportationType\":\"Flight\",\"statusCode\":\"HK\",\"status\":\"Confirmed\",\"flight\":{\"id\":\"SK1239-20200214-CPH-ARN\",\"operatingCarrier\":\"SK\",\"operatingFlightNumber\":\"1239\",\"marketingCarrier\":\"SK\",\"marketingFlightNumber\":\"1239\",\"departure\":{\"station\":\"CPH\",\"terminal\":\"2\",\"scheduledTime\":{\"local\":\"2020-02-14T17:30:00Z\",\"utc\":\"2020-02-14T16:30:00Z\"}},\"arrival\":{\"station\":\"ARN\",\"terminal\":\"2\",\"scheduledTime\":{\"local\":\"2020-02-14T18:30:00Z\",\"utc\":\"2020-02-14T17:30:00Z\"}}},\"bookingClass\":\"Y\",\"serviceClass\":\"C\"}]},{\"id\":\"ABC132-O-02\",\"type\":\"Outbound\",\"segments\":[{\"id\":\"ABC132-O-02-01\",\"transportationType\":\"Flight\",\"statusCode\":\"HK\",\"status\":\"Confirmed\",\"flight\":{\"id\":\"SK1240-20200221-LLA-OSL\",\"operatingCarrier\":\"SK\",\"operatingFlightNumber\":\"1240\",\"marketingCarrier\":\"SK\",\"marketingFlightNumber\":\"1240\",\"departure\":{\"station\":\"LLA\",\"terminal\":\"2\",\"scheduledTime\":{\"local\":\"2020-02-21T16:00:00Z\",\"utc\":\"2020-02-21T15:00:00Z\"}},\"arrival\":{\"station\":\"OSL\",\"terminal\":\"2\",\"scheduledTime\":{\"local\":\"2020-02-22T15:00:00Z\",\"utc\":\"2020-02-22T16:00:00Z\"}}},\"bookingClass\":\"Y\",\"serviceClass\":\"C\"}]},{\"id\":\"ABC132-I-02\",\"type\":\"Inbound\",\"segments\":[{\"id\":\"ABC132-I-02-01\",\"transportationType\":\"Flight\",\"statusCode\":\"HK\",\"status\":\"Confirmed\",\"flight\":{\"id\":\"SK1241-20200222-OSL-LLA\",\"operatingCarrier\":\"SK\",\"operatingFlightNumber\":\"1241\",\"marketingCarrier\":\"SK\",\"marketingFlightNumber\":\"1241\",\"departure\":{\"station\":\"OSL\",\"terminal\":\"2\",\"scheduledTime\":{\"local\":\"2020-02-22T13:00:00Z\",\"utc\":\"2020-02-22T12:00:00Z\"}},\"arrival\":{\"station\":\"LLA\",\"terminal\":\"2\",\"scheduledTime\":{\"local\":\"2020-02-22T14:00:00Z\",\"utc\":\"2020-02-2213:00:00Z\"}}},\"bookingClass\":\"Y\",\"serviceClass\":\"C\"}]}]}';
        IRR_MOD_TedsBooking r = IRR_MOD_TedsBooking.parse(json);
        System.assert(r != null);

        json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
        IRR_MOD_TedsBooking.ScheduledTime objScheduledTime = new IRR_MOD_TedsBooking.ScheduledTime(System.JSON.createParser(json));
        System.assert(objScheduledTime != null);
        System.assert(objScheduledTime.local == null);
        System.assert(objScheduledTime.utc == null);

        json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
        IRR_MOD_TedsBooking.Email objEmail = new IRR_MOD_TedsBooking.Email(System.JSON.createParser(json));
        System.assert(objEmail != null);
        System.assert(objEmail.type_Z == null);
        System.assert(objEmail.address == null);

        json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
        IRR_MOD_TedsBooking.Flight objFlight = new IRR_MOD_TedsBooking.Flight(System.JSON.createParser(json));
        System.assert(objFlight != null);
        System.assert(objFlight.id == null);
        System.assert(objFlight.operatingCarrier == null);
        System.assert(objFlight.operatingFlightNumber == null);
        System.assert(objFlight.marketingCarrier == null);
        System.assert(objFlight.marketingFlightNumber == null);
        System.assert(objFlight.departure == null);
        System.assert(objFlight.arrival == null);

        json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
        IRR_MOD_TedsBooking.Segments objSegments = new IRR_MOD_TedsBooking.Segments(System.JSON.createParser(json));
        System.assert(objSegments != null);
        System.assert(objSegments.segmentId == null);
        System.assert(objSegments.seatedWith == null);
        System.assert(objSegments.ticket == null);
        System.assert(objSegments.seat == null);
        System.assert(objSegments.isCheckedIn == null);
        System.assert(objSegments.checkinOfficeId == null);
        System.assert(objSegments.isBoarded == null);

        json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
        IRR_MOD_TedsBooking.Created objCreated = new IRR_MOD_TedsBooking.Created(System.JSON.createParser(json));
        System.assert(objCreated != null);
        System.assert(objCreated.officeId == null);
        System.assert(objCreated.at == null);

        json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
        IRR_MOD_TedsBooking.Contact objContact = new IRR_MOD_TedsBooking.Contact(System.JSON.createParser(json));
        System.assert(objContact != null);
        System.assert(objContact.phone == null);
        System.assert(objContact.email == null);

        json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
        IRR_MOD_TedsBooking.Audit objAudit = new IRR_MOD_TedsBooking.Audit(System.JSON.createParser(json));
        System.assert(objAudit != null);
        System.assert(objAudit.created == null);
        System.assert(objAudit.updated == null);

        json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
        IRR_MOD_TedsBooking.FrequentTraveler objFrequentTraveler = new IRR_MOD_TedsBooking.FrequentTraveler(System.JSON.createParser(json));
        System.assert(objFrequentTraveler != null);
        System.assert(objFrequentTraveler.euroBonus == null);
        System.assert(objFrequentTraveler.other == null);

        json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
        IRR_MOD_TedsBooking.EuroBonus objEuroBonus = new IRR_MOD_TedsBooking.EuroBonus(System.JSON.createParser(json));
        System.assert(objEuroBonus != null);
        System.assert(objEuroBonus.segmentIds == null);
        System.assert(objEuroBonus.number_Z == null);
        System.assert(objEuroBonus.tier == null);

        json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
        IRR_MOD_TedsBooking.Passengers objPassengers = new IRR_MOD_TedsBooking.Passengers(System.JSON.createParser(json));
        System.assert(objPassengers != null);
        System.assert(objPassengers.id == null);
        System.assert(objPassengers.title == null);
        System.assert(objPassengers.firstName == null);
        System.assert(objPassengers.lastName == null);
        System.assert(objPassengers.type_Z == null);
        System.assert(objPassengers.contact == null);
        System.assert(objPassengers.frequentTraveler == null);
        System.assert(objPassengers.specialServiceRequests == null);
        System.assert(objPassengers.segments == null);

        json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
        IRR_MOD_TedsBooking.Departure objDeparture = new IRR_MOD_TedsBooking.Departure(System.JSON.createParser(json));
        System.assert(objDeparture != null);
        System.assert(objDeparture.station == null);
        System.assert(objDeparture.terminal == null);
        System.assert(objDeparture.scheduledTime == null);

        json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
        IRR_MOD_TedsBooking.Phone objPhone = new IRR_MOD_TedsBooking.Phone(System.JSON.createParser(json));
        System.assert(objPhone != null);
        System.assert(objPhone.type_Z == null);
        System.assert(objPhone.number_Z == null);

        json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
        IRR_MOD_TedsBooking.Segments_Z objSegments_Z = new IRR_MOD_TedsBooking.Segments_Z(System.JSON.createParser(json));
        System.assert(objSegments_Z != null);
        System.assert(objSegments_Z.id == null);
        System.assert(objSegments_Z.transportationType == null);
        System.assert(objSegments_Z.statusCode == null);
        System.assert(objSegments_Z.status == null);
        System.assert(objSegments_Z.flight == null);
        System.assert(objSegments_Z.bookingClass == null);
        System.assert(objSegments_Z.serviceClass == null);

        json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
        IRR_MOD_TedsBooking objIRR_MOD_TedsBooking = new IRR_MOD_TedsBooking(System.JSON.createParser(json));
        System.assert(objIRR_MOD_TedsBooking != null);
        System.assert(objIRR_MOD_TedsBooking.id == null);
        System.assert(objIRR_MOD_TedsBooking.reference == null);
        System.assert(objIRR_MOD_TedsBooking.type_Z == null);
        System.assert(objIRR_MOD_TedsBooking.status == null);
        System.assert(objIRR_MOD_TedsBooking.codsId == null);
        System.assert(objIRR_MOD_TedsBooking.audit == null);
        System.assert(objIRR_MOD_TedsBooking.passengers == null);
        System.assert(objIRR_MOD_TedsBooking.trips == null);

        json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
        IRR_MOD_TedsBooking.Trips objTrips = new IRR_MOD_TedsBooking.Trips(System.JSON.createParser(json));
        System.assert(objTrips != null);
        System.assert(objTrips.id == null);
        System.assert(objTrips.type_Z == null);
        System.assert(objTrips.segments == null);

        json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
        IRR_MOD_TedsBooking.SpecialServiceRequests objSpecialServiceRequests = new IRR_MOD_TedsBooking.SpecialServiceRequests(System.JSON.createParser(json));
        System.assert(objSpecialServiceRequests != null);
        System.assert(objSpecialServiceRequests.segmentIds == null);
        System.assert(objSpecialServiceRequests.type_Z == null);
        System.assert(objSpecialServiceRequests.code == null);
        System.assert(objSpecialServiceRequests.text == null);

        json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
        IRR_MOD_TedsBooking.Other objOther = new IRR_MOD_TedsBooking.Other(System.JSON.createParser(json));
        System.assert(objOther != null);
        System.assert(objOther.segmentIds == null);
        System.assert(objOther.number_Z == null);
        System.assert(objOther.carrier == null);
    }

    // This test method should give 100% coverage
    @IsTest
    static void testParseArray() {
        String json = '[{\"id\":\"ABC132-20200205\",\"reference\":\"ABC132\",\"type\":\"ReturnTrip\",\"status\":\"Active\",\"codsId\":\"85465242\",\"audit\":{\"created\":{\"officeId\":\"STOSK08RV\",\"at\":\"2020-02-05T17:32:28Z\"},\"updated\":{\"officeId\":\"STOSK08RV\",\"at\":\"2017-02-12T17:32:28Z\"}},\"passengers\":[{\"id\":\"ABC132-01\",\"title\":\"MRS\",\"firstName\":\"Testar\",\"lastName\":\"Testperson\",\"type\":\"Adult\",\"contact\":{\"phone\":[{\"type\":\"CTCM\",\"number\":\"+46700000000\"}],\"email\":[{\"type\":\"CTCE\",\"address\":\"name@email.com\"}]},\"frequentTraveler\":{\"euroBonus\":[{\"segmentIds\":[\"ST1\"],\"number\":\"544127491\",\"tier\":\"EBB\"}],\"other\":[{\"segmentIds\":[\"ST1\"],\"number\":\"S125891143\",\"carrier\":\"LH\"}]},\"specialServiceRequests\":[{\"segmentIds\":[\"ST1\",\"ST2\"],\"type\":\"Wheelchair\",\"code\":\"WCHR\",\"text\":\"WCHR ASSISTANCE.PROVIDED REGULATIONS IN SALES PROCEDURES ARE MET\"}],\"segments\":[{\"segmentId\":\"ABC132-O-01-01\",\"seatedWith\":null,\"ticket\":{\"number\":\"117-3456789009876\",\"type\":\"ETKT\"},\"seat\":\"3C\",\"isCheckedIn\":true,\"checkinOfficeId\":\"OSLSK08VB\",\"isBoarded\":true},{\"segmentId\":\"ABC132-I-01-01\",\"seatedWith\":null,\"ticket\":{\"number\":\"117-3456789009876\",\"type\":\"ETKT\"},\"seat\":\"3C\",\"isCheckedIn\":true,\"checkinOfficeId\":\"OSLSK08VB\",\"isBoarded\":true},{\"segmentId\":\"ABC132-O-02-01\",\"seatedWith\":null,\"ticket\":{\"number\":\"117-3456789009876\",\"type\":\"ETKT\"},\"seat\":\"3C\",\"isCheckedIn\":true,\"checkinOfficeId\":\"OSLSK08VB\",\"isBoarded\":true},{\"segmentId\":\"ABC132-O-02-01\",\"seatedWith\":null,\"ticket\":{\"number\":\"117-3456789009876\",\"type\":\"ETKT\"},\"seat\":\"3C\",\"isCheckedIn\":true,\"checkinOfficeId\":\"OSLSK08VB\",\"isBoarded\":true}]}],\"trips\":[{\"id\":\"ABC132-O-01\",\"type\":\"Outbound\",\"segments\":[{\"id\":\"ABC132-O-01-01\",\"transportationType\":\"Flight\",\"statusCode\":\"HK\",\"status\":\"Confirmed\",\"flight\":{\"id\":\"SK1238-20200213-ARN-CPH\",\"operatingCarrier\":\"SK\",\"operatingFlightNumber\":\"1238\",\"marketingCarrier\":\"SK\",\"marketingFlightNumber\":\"1238\",\"departure\":{\"station\":\"ARN\",\"terminal\":\"2\",\"scheduledTime\":{\"local\":\"2020-02-13T16:00:00Z\",\"utc\":\"2020-02-13T15:00:00Z\"}},\"arrival\":{\"station\":\"CPH\",\"terminal\":\"2\",\"scheduledTime\":{\"local\":\"2020-02-13T15:00:00Z\",\"utc\":\"2020-02-13T16:00:00Z\"}}},\"bookingClass\":\"Y\",\"serviceClass\":\"C\"}]},{\"id\":\"ABC132-I-01\",\"type\":\"Inbound\",\"segments\":[{\"id\":\"ABC132-I-01-01\",\"transportationType\":\"Flight\",\"statusCode\":\"HK\",\"status\":\"Confirmed\",\"flight\":{\"id\":\"SK1239-20200214-CPH-ARN\",\"operatingCarrier\":\"SK\",\"operatingFlightNumber\":\"1239\",\"marketingCarrier\":\"SK\",\"marketingFlightNumber\":\"1239\",\"departure\":{\"station\":\"CPH\",\"terminal\":\"2\",\"scheduledTime\":{\"local\":\"2020-02-14T17:30:00Z\",\"utc\":\"2020-02-14T16:30:00Z\"}},\"arrival\":{\"station\":\"ARN\",\"terminal\":\"2\",\"scheduledTime\":{\"local\":\"2020-02-14T18:30:00Z\",\"utc\":\"2020-02-14T17:30:00Z\"}}},\"bookingClass\":\"Y\",\"serviceClass\":\"C\"}]},{\"id\":\"ABC132-O-02\",\"type\":\"Outbound\",\"segments\":[{\"id\":\"ABC132-O-02-01\",\"transportationType\":\"Flight\",\"statusCode\":\"HK\",\"status\":\"Confirmed\",\"flight\":{\"id\":\"SK1240-20200221-LLA-OSL\",\"operatingCarrier\":\"SK\",\"operatingFlightNumber\":\"1240\",\"marketingCarrier\":\"SK\",\"marketingFlightNumber\":\"1240\",\"departure\":{\"station\":\"LLA\",\"terminal\":\"2\",\"scheduledTime\":{\"local\":\"2020-02-21T16:00:00Z\",\"utc\":\"2020-02-21T15:00:00Z\"}},\"arrival\":{\"station\":\"OSL\",\"terminal\":\"2\",\"scheduledTime\":{\"local\":\"2020-02-22T15:00:00Z\",\"utc\":\"2020-02-22T16:00:00Z\"}}},\"bookingClass\":\"Y\",\"serviceClass\":\"C\"}]},{\"id\":\"ABC132-I-02\",\"type\":\"Inbound\",\"segments\":[{\"id\":\"ABC132-I-02-01\",\"transportationType\":\"Flight\",\"statusCode\":\"HK\",\"status\":\"Confirmed\",\"flight\":{\"id\":\"SK1241-20200222-OSL-LLA\",\"operatingCarrier\":\"SK\",\"operatingFlightNumber\":\"1241\",\"marketingCarrier\":\"SK\",\"marketingFlightNumber\":\"1241\",\"departure\":{\"station\":\"OSL\",\"terminal\":\"2\",\"scheduledTime\":{\"local\":\"2020-02-22T13:00:00Z\",\"utc\":\"2020-02-22T12:00:00Z\"}},\"arrival\":{\"station\":\"LLA\",\"terminal\":\"2\",\"scheduledTime\":{\"local\":\"2020-02-22T14:00:00Z\",\"utc\":\"2020-02-2213:00:00Z\"}}},\"bookingClass\":\"Y\",\"serviceClass\":\"C\"}]}]}]';

        List<IRR_MOD_TedsBooking> r = IRR_MOD_TedsBooking.parseArray(json);
        System.assert(r != null);
        System.assert(!r.isEmpty());
    }
}