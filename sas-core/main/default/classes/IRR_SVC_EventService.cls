/**
* @author Niklas Lundkvist, Deloitte
* @date 2020
*
* @description Entry point for event related functionality.
*/

public class IRR_SVC_EventService {

    public static void processEvent(String eventType, String payload) {
        service().processEvent(eventType, payload);
    }

    public static void processEvent(String eventType, Object payload) {
        service().processEvent(eventType, payload);
    }

    private static IRR_SVC_IEventService service() {
        return (IRR_SVC_IEventService) IRR_Application.Service.newInstance(IRR_SVC_IEventService.class);
    }

    public class CommunicationLogFactory {

        private fflib_ISObjectUnitOfWork unitOfWork;

        /**
         * List of CommunicationLogs generated by the factory
         **/
        public List<IRR_CommunicationLog__c> communicationLogs {get; private set;}

        public CommunicationLogFactory(fflib_ISObjectUnitOfWork unitOfWork)
        {
            this.unitOfWork = unitOfWork;
            this.communicationLogs = new List<IRR_CommunicationLog__c>();
        }

        public void add(IRR_MOD_Message message) {
            IRR_CommunicationLog__c log = new IRR_CommunicationLog__c();
            log.IRR_FlightId__c = message.passengerInfo.thisSegment.flightId;
            log.IRR_BookingReference__c = message.passengerInfo.bookingReference;
            log.IRR_CodsId__c = message.passengerInfo.codsId;
            log.IRR_Channel__c = String.valueOf(message.type);
            log.IRR_ContactKey__c = message.contactKey;
            log.IRR_MessageKey__c = message.messageKey;
            log.IRR_Recipient__c = message.recipient;
            log.IRR_Status__c = message.status;
            //TODO CONTENT?
            unitOfWork.registerNew(log);
        }
    }

    public class EventException extends Exception { }
}