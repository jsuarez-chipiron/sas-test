<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <actionCalls>
        <description>Posts the internal comments to the chatter feed on the case</description>
        <name>CaseChatterFeed</name>
        <label>CaseChatterFeed</label>
        <locationX>670</locationX>
        <locationY>365</locationY>
        <actionName>chatterPost</actionName>
        <actionType>chatterPost</actionType>
        <connector>
            <targetReference>Redirection_Submission</targetReference>
        </connector>
        <inputParameters>
            <name>text</name>
            <value>
                <elementReference>Chatter_Comment</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>subjectNameOrId</name>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </inputParameters>
    </actionCalls>
    <choices>
        <description>High</description>
        <name>High</name>
        <choiceText>High</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>&quot;High&quot;</stringValue>
        </value>
    </choices>
    <choices>
        <description>Medium</description>
        <name>Medium</name>
        <choiceText>Medium</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>&quot;Medium&quot;</stringValue>
        </value>
    </choices>
    <choices>
        <description>Redirection Request Type To Other Department.</description>
        <name>Redirection</name>
        <choiceText>Redirection</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>Redirection</stringValue>
        </value>
    </choices>
    <description>Redirection flow</description>
    <dynamicChoiceSets>
        <description>The department that which the redirection is going to be sent to</description>
        <name>AvailableDepartment</name>
        <dataType>Picklist</dataType>
        <displayField xsi:nil="true"/>
        <object xsi:nil="true"/>
        <picklistField>Department__c</picklistField>
        <picklistObject>Case</picklistObject>
    </dynamicChoiceSets>
    <dynamicChoiceSets>
        <description>The team in the department that is required for the redirection</description>
        <name>AvailableTeam</name>
        <dataType>Picklist</dataType>
        <displayField xsi:nil="true"/>
        <object xsi:nil="true"/>
        <picklistField>Team__c</picklistField>
        <picklistObject>Case</picklistObject>
    </dynamicChoiceSets>
    <formulas>
        <description>Based on the Department and team, the formula shows the defined case type.</description>
        <name>CaseType</name>
        <dataType>String</dataType>
        <expression>IF({!DependentList.middleValue} = &quot;Sales Information&quot; ,  &quot;Sales Information&quot;,  IF({!DependentList.middleValue} = &quot;SASSI Internal&quot;,&quot;SASSI Internal&quot;, IF({!DependentList.middleValue} = &quot;System &amp; Tariff&quot;, &quot; &quot;, IF({!DependentList.topValue} = &quot;Functional Product Support&quot;, &quot;Functional Product Support&quot;, &quot;Channel&quot;))))</expression>
    </formulas>
    <formulas>
        <name>InputPriority</name>
        <dataType>String</dataType>
        <expression>IF({!Priority} = &quot;Medium&quot;, &quot;Medium&quot;, &quot;High&quot;)</expression>
    </formulas>
    <formulas>
        <name>RecordTypeName</name>
        <dataType>String</dataType>
        <expression>IF( {!DependentList.topValue} = &quot;Info Hub&quot;, &quot;Internal/Backoffice&quot;, IF( {!DependentList.topValue} = &quot;Functional Product Support&quot;, &quot;Functional Product Support&quot;, &quot;Channel&quot;))</expression>
    </formulas>
    <formulas>
        <description>Depending on the priority the  IsEscalated value will be set to TRUE or FALSE</description>
        <name>SetEscalatedValue</name>
        <dataType>Boolean</dataType>
        <expression>IF({!InputPriority} = &quot;Medium&quot;,   FALSE, TRUE)</expression>
    </formulas>
    <interviewLabel>Redirection {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Redirection</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>FREE_FORM_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>Flow</processType>
    <recordLookups>
        <description>Gets all the information of the case where the flow was triggered from</description>
        <name>GetCurrentCaseInformation</name>
        <label>GetCurrentCaseInformation</label>
        <locationX>176</locationX>
        <locationY>190</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>To_Other_Department</targetReference>
        </connector>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Case</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GetDepartmentQueueId</name>
        <label>GetDepartmentQueueId</label>
        <locationX>294</locationX>
        <locationY>365</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>GetRecordTypeId</targetReference>
        </connector>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>DependentList.topValue</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Group</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GetRecordTypeId</name>
        <label>GetRecordTypeId</label>
        <locationX>423</locationX>
        <locationY>365</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Redirect_Case</targetReference>
        </connector>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>RecordTypeName</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>RecordType</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <description>Update the current case to be directed to the right skill</description>
        <name>Redirect_Case</name>
        <label>Redirect Case</label>
        <locationX>566</locationX>
        <locationY>365</locationY>
        <connector>
            <targetReference>CaseChatterFeed</targetReference>
        </connector>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>GetCurrentCaseInformation.Id</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Department__c</field>
            <value>
                <elementReference>DependentList.topValue</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>IsEscalated</field>
            <value>
                <elementReference>SetEscalatedValue</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>IsRedirected__c</field>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>OwnerId</field>
            <value>
                <elementReference>GetDepartmentQueueId.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Priority</field>
            <value>
                <elementReference>InputPriority</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>RecordTypeId</field>
            <value>
                <elementReference>GetRecordTypeId.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Team__c</field>
            <value>
                <elementReference>DependentList.middleValue</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Type</field>
            <value>
                <elementReference>CaseType</elementReference>
            </value>
        </inputAssignments>
        <object>Case</object>
    </recordUpdates>
    <screens>
        <name>Redirection_Submission</name>
        <label>Redirection Submission</label>
        <locationX>774</locationX>
        <locationY>367</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <fields>
            <name>FinalOutcome</name>
            <fieldText>&lt;p style=&quot;text-align: center;&quot;&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); font-size: 16px;&quot;&gt;Case has been redirected to {!DependentList.topValue}&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <description>Input for making a request to another department</description>
        <name>To_Other_Department</name>
        <label>To Other Department</label>
        <locationX>173</locationX>
        <locationY>365</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>GetDepartmentQueueId</targetReference>
        </connector>
        <fields>
            <name>Request_Type</name>
            <choiceReferences>Redirection</choiceReferences>
            <dataType>String</dataType>
            <fieldText>Request Type</fieldText>
            <fieldType>DropdownBox</fieldType>
            <isRequired>true</isRequired>
        </fields>
        <fields>
            <name>DependentList</name>
            <extensionName>flowruntime:dependentPicklists</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>dependencyWrapperApiName</name>
                <value>
                    <stringValue>Case</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>topPicklistApiName</name>
                <value>
                    <stringValue>Department__c</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>middlePicklistApiName</name>
                <value>
                    <stringValue>Team__c</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>topLabel</name>
                <value>
                    <stringValue>Department</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>middleLabel</name>
                <value>
                    <stringValue>Team</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>topRequired</name>
                <value>
                    <booleanValue>true</booleanValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>topValue</name>
                <value>
                    <elementReference>AvailableDepartment</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>middleValue</name>
                <value>
                    <elementReference>AvailableTeam</elementReference>
                </value>
            </inputParameters>
            <isRequired>true</isRequired>
            <storeOutputAutomatically>true</storeOutputAutomatically>
        </fields>
        <fields>
            <name>Chatter_Comment</name>
            <dataType>String</dataType>
            <fieldText>Chatter Comment</fieldText>
            <fieldType>InputField</fieldType>
            <helpText>&lt;p&gt;Please provide write the motive for redirecting the case&lt;/p&gt;</helpText>
            <isRequired>true</isRequired>
        </fields>
        <fields>
            <name>Priority</name>
            <choiceReferences>Medium</choiceReferences>
            <choiceReferences>High</choiceReferences>
            <dataType>String</dataType>
            <fieldText>Priority</fieldText>
            <fieldType>DropdownBox</fieldType>
            <isRequired>true</isRequired>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <start>
        <locationX>50</locationX>
        <locationY>50</locationY>
        <connector>
            <targetReference>GetCurrentCaseInformation</targetReference>
        </connector>
    </start>
    <status>Active</status>
    <variables>
        <description>The ID of the record from where the flow was triggered</description>
        <name>recordId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
