# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- irr/support

pool:
  vmImage: 'ubuntu-latest'

variables:
  SFDX_USE_GENERIC_UNIX_KEYCHAIN: true
  SFDX_DOMAIN_RETRY: 300
  SFDX_DISABLE_APP_HUB: true
  SFDX_LOG_LEVEL: DEBUG
steps:
- task: DownloadSecureFile@1
  name: ci_cert
  displayName: 'Download Certificate'
  inputs:
    secureFile: 'ci_cert_new.key'

- script: |
    sudo npm install sfdx-cli@latest-rc --global
    sfdx --version
    sfdx plugins --core
  displayName: 'Install SFDX'

- script: |
    sfdx force:source:convert --rootdir ./$(PACKAGE_FOLDER) --outputdir ./package-md
  displayName: 'Convert to metadata package'

- script: |
    if [ -e ./$(PACKAGE_FOLDER)/destructiveChangesPre.xml ]; then
      cp ./$(PACKAGE_FOLDER)/destructiveChangesPre.xml ./package-md/destructiveChangesPre.xml
    fi
    if [ -e ./$(PACKAGE_FOLDER)/destructiveChangesPost.xml ]; then
      cp ./$(PACKAGE_FOLDER)/destructiveChangesPost.xml ./package-md/destructiveChangesPost.xml
    fi
  displayName: 'Evaluate destructive changes'

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: './package-md'
    includeRootFolder: true
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/package-md.zip'
    replaceExistingArchive: true
  displayName: 'Create metadata package artifact'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'Package'
    publishLocation: 'Container'
